/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mainpack;

import appservice.AdminService;
import dao.StudentDAO;
import imageconvert.ImageConvert;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Student;

/**
 *
 * @author Admin
 */
public class AdminFrame extends javax.swing.JFrame {

    DefaultTableModel model;
    AdminService service;
    private String avatarStudent = "";

    public AdminFrame() {
        initComponents();
        this.setResizable(false);
        ImageIcon icon = new ImageIcon("D:\\Java_source\\Lab_Java_3\\Assignment\\src\\imgicon\\admin_1.png");
        this.setIconImage(icon.getImage());
        model = new DefaultTableModel();
        service = new AdminService(StudentDAO.getInstance().selectAll());
        changeColumnName();
        fillTable();
        displayTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderRadioGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        codeLabel = new javax.swing.JLabel();
        codeInput = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        phoneInput = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        maleRadio = new javax.swing.JRadioButton();
        femaleRadio = new javax.swing.JRadioButton();
        addressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressInput = new javax.swing.JTextArea();
        newBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        stuCodeErr = new javax.swing.JLabel();
        nameErr = new javax.swing.JLabel();
        emailErr = new javax.swing.JLabel();
        phoneErr = new javax.swing.JLabel();
        addressErr = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        displayImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel1.setText("Quản Lý  Sinh Viên");

        codeLabel.setText("Mã SV");

        nameLabel.setText("Ho Tên");

        emailLabel.setText("Email");

        phoneLabel.setText("Số ĐT");

        genderLabel.setText("GIới TÍnh");

        genderRadioGroup.add(maleRadio);
        maleRadio.setSelected(true);
        maleRadio.setText("Nam");

        genderRadioGroup.add(femaleRadio);
        femaleRadio.setText("Nữ");

        addressLabel.setText("Địa Chỉ");

        addressInput.setColumns(20);
        addressInput.setRows(5);
        jScrollPane1.setViewportView(addressInput);

        newBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/add-button_1.png"))); // NOI18N
        newBtn.setText("NEW");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/save_1.png"))); // NOI18N
        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/remove_1.png"))); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/update_1.png"))); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        displayTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(displayTable);

        stuCodeErr.setForeground(new java.awt.Color(255, 0, 0));
        stuCodeErr.setPreferredSize(new java.awt.Dimension(0, 14));

        nameErr.setForeground(new java.awt.Color(255, 0, 0));
        nameErr.setPreferredSize(new java.awt.Dimension(0, 14));

        emailErr.setForeground(new java.awt.Color(255, 0, 0));
        emailErr.setPreferredSize(new java.awt.Dimension(0, 14));

        phoneErr.setForeground(new java.awt.Color(255, 0, 0));
        phoneErr.setPreferredSize(new java.awt.Dimension(0, 14));

        addressErr.setForeground(new java.awt.Color(255, 0, 0));
        addressErr.setPreferredSize(new java.awt.Dimension(0, 14));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        displayImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayImage.setText("Ấn Vào Để Chọn Ảnh");
        displayImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        displayImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addressErr, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(stuCodeErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(codeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(maleRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(femaleRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(phoneErr, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(phoneInput, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(nameErr, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailErr, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(newBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 11, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(stuCodeErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(nameErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(maleRadio)
                                    .addComponent(femaleRadio))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newBtn)
                            .addComponent(saveBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBtn)
                            .addComponent(updateBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        resetForm();

    }//GEN-LAST:event_newBtnActionPerformed


    private void displayImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayImageMouseClicked
        ImageIcon img = new ImageIcon();
        avatarStudent = choseFile(img, displayImage);

    }//GEN-LAST:event_displayImageMouseClicked

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        Student stAdd = inputValidation();
        if (stAdd != null) {
            service.addFunction(stAdd);
            fillTable();
            JOptionPane.showMessageDialog(this, "Thêm Sinh Viên Thành Công");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void displayTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayTableMouseClicked
        int rowIndex = displayTable.getSelectedRow();
        showCurrentStudent(rowIndex);
        System.out.println(displayImage.getIcon().toString());
    }//GEN-LAST:event_displayTableMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int rowSelected = displayTable.getSelectedRow();
        if (rowSelected >= 0) {
            Student stUpdate = inputValidation();
            if (stUpdate != null) {
                service.updateFunction(stUpdate);
                fillTable();
                JOptionPane.showMessageDialog(this, "Cập Nhật Thành Công");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn Chưa Chọn Vào Sinh Viên Cần Update");
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int rowSelected = displayTable.getSelectedRow();
        if (rowSelected >= 0) {
            Student stRemove = service.getStudentLists().get(rowSelected);
            service.deleteFunction(stRemove);
            fillTable();
            JOptionPane.showMessageDialog(this, "Xóa Sinh viên Thành Công");
            resetForm();
        } else {
            JOptionPane.showMessageDialog(this, "Bạn Chưa Chọn Vào Dòng Có Sinh Viên Cần Xóa");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressErr;
    private javax.swing.JTextArea addressInput;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField codeInput;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel displayImage;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel emailErr;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JRadioButton femaleRadio;
    private javax.swing.JLabel genderLabel;
    private javax.swing.ButtonGroup genderRadioGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton maleRadio;
    private javax.swing.JLabel nameErr;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton newBtn;
    private javax.swing.JLabel phoneErr;
    private javax.swing.JTextField phoneInput;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel stuCodeErr;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    public void changeColumnName() {
        ArrayList<String> coLumnName = StudentDAO.getInstance().getColumnNames();

        for (String name : coLumnName) {
            model.addColumn(name);
        }
    }

    public String choseFile(ImageIcon imageIcon, JLabel displayImg) {
        try {
            JFileChooser chooser = new JFileChooser();
            FileFilter imageFilter = new FileNameExtensionFilter(
                    "Image files", ImageIO.getReaderFileSuffixes());
            chooser.addChoosableFileFilter(imageFilter);
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            String filename = file.getAbsolutePath();
            imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(displayImage.getWidth(), displayImage.getHeight(), Image.SCALE_SMOOTH));
            displayImage.setText("");
            displayImg.setIcon(imageIcon);
            return filename;
        } catch (HeadlessException e) {
            return "No File Chosen";
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Bạn Chưa Chọn File Ảnh!");
            return e.getMessage();
        }
    }

    public void resetForm() {
        codeInput.setText("");
        nameInput.setText("");
        emailInput.setText("");
        phoneInput.setText("");
        addressInput.setText("");
        displayImage.setText("Ấn Vào Để Chọn Ảnh");
        displayImage.setIcon(null);
    }

    public void fillTable() {
        service.setStudentLists(StudentDAO.getInstance().selectAll());
        model.setRowCount(0);
        for (Student st : service.getStudentLists()) {
            Object[] row = {st.getStudentCode(), st.getName(), st.getEmail(), st.getPhone(), st.getGenderString(), st.getAddress(), st.getAvatar()};
            model.addRow(row);
        }
    }

    private Student inputValidation() {
        String studentCode = "";
        String name = "";
        String email = "";
        String phone = "";
        boolean gender;
        String address = "";
        byte[] avatarImg = null;

        int coutError = 0;

        if (codeInput.getText().isEmpty()) {
            coutError++;
            stuCodeErr.setText("Bạn Chưa Nhập Vào Mã Sinh Viên !");
        } else {
            if (codeInput.getText().length() < 5 && !codeInput.getText().startsWith("PH")) {
                coutError++;
                stuCodeErr.setText("Mã Sinh Viên Chưa Đúng Định Dạng !");
            } else {
                studentCode = codeInput.getText();
                stuCodeErr.setText("");
            }
        }

        if (nameInput.getText().isEmpty()) {
            coutError++;
            nameErr.setText("Bạn Chưa Nhập Vào Họ Tên !");
        } else {
            if (nameInput.getText().length() < 20 && nameInput.getText().length() > 40) {
                coutError++;
                nameErr.setText("Tên Sinh Viên Chưa Đúng Định Dạng !");
            } else {
                name = nameInput.getText();
                nameErr.setText("");
            }
        }

        if (emailInput.getText().isEmpty()) {
            coutError++;
            emailErr.setText("Bạn Chưa Nhập Vào Email !");
        } else {
            if (!emailInput.getText().matches("^[A-Za-z0-9]+[A-Za-z0-9]*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)$")) {
                coutError++;
                emailErr.setText("Địa Chỉ Email Chưa Đúng Định Dạng !");
            } else {
                email = emailInput.getText();
                emailErr.setText("");
            }
        }

        if (phoneInput.getText().isEmpty()) {
            coutError++;
            phoneErr.setText("Bạn Chưa Nhập Vào Số Điện Thoại !");
        } else {
            if (!phoneInput.getText().matches("0\\d{9,10}")) {
                coutError++;
                phoneErr.setText("Số Điện Thoại Chưa Đúng Định Dạng !");
            } else {
                phone = phoneInput.getText();
                phoneErr.setText("");
            }
        }

        if (maleRadio.isSelected()) {
            gender = true;
        } else {
            gender = false;
        }

        if (addressInput.getText().isEmpty()) {
            coutError++;
            addressErr.setText("Bạn Chưa Nhập Vào Địa Chỉ !");
        } else {
            address = addressInput.getText();
            addressErr.setText("");
        }

        if (displayImage.getIcon() == null && avatarStudent.equals("")) {
            coutError++;
            JOptionPane.showMessageDialog(this, "Bạn Chưa Chọn Ảnh Cho Sinh Viên");
        } else if (displayImage.getIcon() != null) {
            avatarImg = ImageConvert.convertImg(displayImage.getIcon());
        } else {
            avatarImg = ImageConvert.convertImg(avatarStudent);
        }

        if (coutError == 0) {
            Student st = new Student(studentCode, name, email, phone, gender, address, avatarImg);
            return st;
        }
        return null;
    }

    public void showCurrentStudent(int index) {
        Student st = service.getStudentLists().get(index);
        codeInput.setText(st.getStudentCode());
        nameInput.setText(st.getName());
        emailInput.setText(st.getEmail());
        phoneInput.setText(st.getPhone());
        maleRadio.setSelected(st.isGender());
        femaleRadio.setSelected(!st.isGender());
        addressInput.setText(st.getAddress());
        byte[] imageSt = st.getAvatar();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(imageSt).getImage().getScaledInstance(displayImage.getWidth(), displayImage.getHeight(), Image.SCALE_SMOOTH));
        st.setAvatar(imageSt);
        displayImage.setText("");
        displayImage.setIcon(imageIcon);
    }
}
